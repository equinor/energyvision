name: 'Deploy websites'
description: 'Steps needed to deploy all websites to Radix'
inputs:
  imageName:
    description: 'The path to where the image is to be copied'
    required: true
  datasetName:
    description: 'Name of dataset to be used for Sanity'
    required: true
  githubToken:
    description: 'GitHub token'
    required: true
outputs:
  copied-files:
    description: 'Number of files copied'
    value: ${{ steps.random-number-generator.outputs.filesNo }}
runs:
  using: 'composite'
  steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
    - name: Cache pnpm modules 💾
      uses: actions/cache@v2
      env:
        cache-name: cache-pnpm-modules
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
    - name: Set default image tag 🏷
      shell: bash
      id: set-default-image-tag
      run: |
        echo "IMAGE_TAG=$(echo ${GITHUB_REF##*/}-latest)" >> $GITHUB_ENV
    - name: Build web component ⚙️
      shell: bash
      id: build
      run: |
        docker build . \
          --cache-from ${{ inputs.imageName }}:${{ env.IMAGE_TAG}} \
          --build-arg ARG_SANITY_DATASET=${{ inputs.datasetName  }} \
          --file web/Dockerfile \
          --tag ${{ inputs.imageName }}:${{ env.IMAGE_TAG }} \
          --build-arg BUILDKIT_INLINE_CACHE=1
    - name: Push the image to GHCR ☁
      shell: bash
      id: push-to-ghcr
      run: |
        echo "${{ inputs.githubToken }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/equinor/energyvision/web-${{ inputs.datasetName  }}:${{ env.IMAGE_TAG }}
    - name: Get environment from branch 🦞
      id: get-environment
      uses: equinor/radix-github-actions@master
      with:
        args: >
          get config branch-environment
          --from-config
          -b ${GITHUB_REF##*/}
    - name: Deploy API on Radix 🚀
      id: deploy
      uses: equinor/radix-github-actions@master
      with:
        args: >
          create job
          deploy
          --token-environment
          --from-config
          -e ${{ steps.get-environment.outputs.result }}
          -f
    - name: log-errors-to-slack 📄
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
      if: failure()
