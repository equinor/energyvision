name: Test accessibility with axe-core on Browserstack
on:
  workflow_dispatch:
  push:
    branches:
      - foobar
    paths:
      - 'web/**/*.jsx?'
      - 'web/**/*.tsx?'
jobs:
  check_code:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: 'BrowserStack Env Setup'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      - name: 'BrowserStack Local Tunnel Setup'  # Invokes the setup-local action
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Cache pnpm modules üíæ
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: latest
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install
          pnpm install --filter energy-vision-web
      - name: 'Running application under test'
        run: pnpm web start & # TODO: Configure in code first! Use next instead?! Determine which pages to run.

      - name: 'Running test on BrowserStack'
        run: pnpm e2e test

      - name: 'BrowserStackLocal Stop'  # Terminating the BrowserStackLocal tunnel connection
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: stop

      - name: log-errors-to-slack üìÑ
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()