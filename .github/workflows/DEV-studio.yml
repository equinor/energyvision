name: DEV - Build & deploy studio for equinor.com
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'studio/**/*'
jobs:
  check-code:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: 'studio/yarn.lock'
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: '^7.1.7'
      - name: Install dependencies üîß
        id: install-dependencies
        run: |
          pnpm install
          pnpm studio yarn
      - name: Run ESLint üîé
        id: lint
        run: |
          pnpm lint:studio

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-studio:
    needs: check-code
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://studio-global-development-energyvision-dev.radix.equinor.com/
    strategy:
      matrix:
        dataset: [global-development]
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.RADIX_MACHINE_USER_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - id: deploy-satellite
        uses: ./.github/workflows/deploy-studios/
        with:
          imageName: ghcr.io/equinor/energyvision/studio-${{ matrix.dataset }}
          datasetName: ${{ matrix.dataset }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          sanityApiToken: ${{ secrets.SANITY_API_TOKEN }}
          sanityPreviewToken: ${{ secrets.SANITY_STUDIO_PREVIEW_SECRET }}
          brandmasterUrl: ${{ secrets.SANITY_STUDIO_BRANDMASTER_URL }}
          brandmasterPluginSource: ${{ secrets.SANITY_STUDIO_BRANDMASTER_PLUGIN_SOURCE }}
          environment: ${{ secrets.ENV }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
