name: Build & deploy Storybook
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for storybook'
        type: choice
        required: true
        options:
          - development
          - production
        default: development
  push:
    branches:
      - main
    paths:
      - 'web/components/**'
      - 'web/.storybook/**'
      - 'web/package.json'
      - '!web/components/README.md'
      - 'pnpm-lock.yaml'
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  upload:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'development'}}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Cache pnpm modules üíæ
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Install pnpm üì¶
        id: install-pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '^7.2.1'
      - name: Install dependencies üîΩ
        id: install-dependencies
        run: |
          pnpm install
          pnpm install --filter energy-vision-web
      - name: Lint components üîé
        id: lint
        run: |
          pnpm lint:components
      - name: Run tests üïµÔ∏è‚Äç‚ôÄÔ∏è
        id: test
        run: |
          pnpm test ./components/ --filter energy-vision-web
      - name: Build storybook üîß
        id: build
        run: |
          pnpm --filter energy-vision-web build-storybook

      - name: Login to Azure üå•Ô∏è
        id: login-to-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.ENVIS_ACTIONS_SERVICE_PRINCIPAL }}
      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ vars.AZ_STORAGE_ACCOUNT_NAME }} --auth-mode key -d '$web' -s ./web/storybook-static
      - name: Purge CDN endpoint
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name ${{ vars.AZ_CDN_PROFILE_NAME }} --name ${{ vars.AZ_CDN_ENDPOINT_NAME}} --resource-group ${{ vars.AZ_RESOURCE_GROUP_NAME}}

      # Azure logout
      - name: logout
        run: |
          az logout
        if: always()

      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
