name: PREPROD - Build & Deploy all webs
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["TEST - Build & Deploy global-test"]
    types:
      - completed
jobs:
  update-radix-config:
    runs-on: ubuntu-latest
    environment:
      name: preprod
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    outputs:
      imageTag: ${{ steps.get-test-sha.outputs.sha }}
    steps:
      - name: Checkout internal üõéÔ∏è
        id: checkout-internal
        uses: actions/checkout@v3
        with:
          repository: 'equinor/energyvision-internal'
          ref: main
          token: ${{ secrets.PAT }} # Replace with ssh as per https://stackoverflow.com/questions/60222741/github-actions-and-git-clone-issue
      - name: Get test sha üè∑Ô∏è
        id: get-test-sha
        shell: bash
        run: |
          # Install pre-requisite
          python -m pip install --user ruamel.yaml
          echo "::set-output name=sha::$(python ci/returnComponentVersion.py test web-global-test)"
      - name: Modify radixconfig tag for preprod on main branch üóíÔ∏è
        if: github.ref == 'refs/heads/main'
        shell: bash
        id: modify-radix
        run: |
          # Install pre-requisite
          python -m pip install --user ruamel.yaml
          python ci/upgradeEnvironment.py web ${{ steps.get-test-sha.outputs.sha }} ${{ secrets.ENV }}
          git config --global user.name 'github'
          git config --global user.email 'nilsml@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/equinor/energyvision-internal
          if [[ `git status --porcelain` ]]
          then
            git commit -am "üöÄ Deploy webs to preprod with tag ${{ steps.get-test-sha.outputs.sha }}" --allow-empty
            git pull --rebase origin main
            git push origin HEAD:main
          fi

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-secret:
    needs: update-radix-config
    runs-on: ubuntu-latest
    environment:
      name: preprod
      url: https://web-secret-energyvision-preprod.radix.equinor.com/
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.RADIX_MACHINE_USER_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - id: deploy-secret
        uses: ./.github/workflows/deploy-websites/
        with:
          imageName: ghcr.io/equinor/energyvision/web-secret
          imageTag: ${{ (needs.update-radix-config.outputs.imageTag }}
          projectId: w3b4om14
          datasetName: secret
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          sanityApiToken: ${{ secrets.SANITY_API_SECRET_TOKEN }}
          sanityPreviewSecret: ${{ secrets.SANITY_API_SECRET_TOKEN }}
          algoliaAppId: ${{ secrets.ALGOLIA_APP_ID }}
          algoliaApiKey: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
          algoliaApiKeyServer: ${{ secrets.ALGOLIA_SEARCH_API_SERVER_KEY }}
          environment: ${{ secrets.ENV }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  read-satellites:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        name: Read from satellites.json
        run: |
          MATRIX=$(cat satellites.json)
          echo ::set-output name=matrix::${MATRIX}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  deploy-all-sites:
    needs: [update-radix-config, read-satellites]
    runs-on: ubuntu-latest
    environment:
      name: preprod
    strategy:
      matrix:
        dataset: ${{ fromJson(needs.read-satellites.outputs.matrix) }}
    env:
      APP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.RADIX_MACHINE_USER_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - id: deploy-website
        uses: ./.github/workflows/deploy-websites/
        with:
          imageName: ghcr.io/equinor/energyvision/web-${{ matrix.dataset }}
          imageTag: ${{ (needs.update-radix-config.outputs.imageTag }}
          datasetName: ${{ matrix.dataset }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          sanityApiToken: ${{ secrets.SANITY_API_TOKEN }}
          sanityPreviewSecret: ${{ secrets.SANITY_PREVIEW_SECRET }}
          algoliaAppId: ${{ secrets.ALGOLIA_APP_ID }}
          algoliaApiKey: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
          algoliaApiKeyServer: ${{ secrets.ALGOLIA_SEARCH_API_SERVER_KEY }}
          environment: ${{ secrets.ENV }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
