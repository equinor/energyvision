@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'video.js/dist/video-js.css';
@import './components/videojs.css';
@import 'tailwindcss/utilities';

:root {
  /* Image carousel card withs */
  --image-carousel-card-w-sm: 275px;
  --image-carousel-card-w-md: 692px;
  --image-carousel-card-w-lg: 980px;

  /* Modal */
  --modal-transition-duration: 0.4s;
  --modal-transition-easing: cubic-bezier(0.45, 0, 0.55, 1);
}

@layer base {
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    overflow-wrap: break-word;
  }

  input[type='search' i]::-webkit-search-cancel-button {
    display: none;
  }

  /* Scroll lock on the native dialog html element */
  body:has(dialog[open]) {
    @apply overflow-hidden;
  }
}

@layer components {
  article {
    counter-reset: footnotes;
  }
  /**
 * Inline footnotes references
 * 1. Increment the counter at each new reference
 */
  a[aria-describedby='footnote-label'] {
    @apply relative cursor-default outline-none text-inherit;
    counter-increment: footnotes;
    text-decoration: none;
    /* outline: none;*/
  }
  a[aria-describedby='footnote-label']::before {
    @apply cursor-pointer;
    content: '';
    position: absolute;
    width: 48px;
    aspect-ratio: 1/1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 100%;
  }
  /**
 * Actual numbered references
 * 1. Display the current state of the counter (e.g. `[1]`)
 */
  a[aria-describedby='footnote-label']::after {
    @apply align-super 
    text-xs 
    pl-[2px] 
    text-slate-blue-95 
    no-underline
    font-medium
    pr-[2px]
    cursor-pointer
    hover:underline
    hover:font-medium;
    content: counter(footnotes); /* 1 */
  }

  /**
 * Resetting the default focused styles on the number
 */
  a[aria-describedby='footnote-label']:focus::after {
    @apply outline-dashed outline-2 outline-offset-2 outline-norwegian-woods-100;
  }

  /* highlight the note in the footer */
  footer :target {
    @apply bg-autumn-storm-40 w-fit;
  }

  /* MODAL */
  .modal[open] {
    @apply opacity-100 [clip-path:inset(0_round_0.5rem)] [transform:none];
  }
  .modal {
    @apply opacity-0 [clip-path:inset(10%_round_0.5rem)] translate-y-[40vh];
  }
  /*   Before-open state  */
  @starting-style {
    .modal[open] {
      @apply opacity-0 [clip-path:inset(10%_round_0.5rem)] translate-y-[40vh];
    }
  }
  .modal-transition {
    transition: opacity calc(var(--modal-transition-duration) / 2) var(--modal-transition-easing)
        calc(var(--modal-transition-duration) / 2),
      transform var(--modal-transition-duration) var(--modal-transition-easing),
      clip-path var(--modal-transition-duration) var(--modal-transition-easing), display 0.7s allow-discrete,
      overlay 0.7s allow-discrete;
  }
}

@layer utilities {
  /* Scroll-Timeline Supported, Yay! */
  @supports (animation-timeline: view()) {
    .animate-timeline {
      @apply animate-fadeInOut;
      animation-timeline: view();
      animation-range: cover 18% cover 85%;
    }
  }
  .white-right-gradient {
    background-image: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.3) 30%,
      rgba(255, 255, 255, 0.4) 100%
    );
  }
  .white-left-gradient {
    background-image: linear-gradient(
      to left,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.3) 30%,
      rgba(255, 255, 255, 0.4) 100%
    );
  }
  .white-to-top-gradient {
    background-image: linear-gradient(
      to top,
      rgba(255, 255, 255, 0.7),
      rgba(255, 255, 255, 0.3) 30%,
      rgba(255, 255, 255, 0) 100%
    );
  }
  .white-to-top-tall-gradient {
    background-image: linear-gradient(
      to top,
      rgba(255, 255, 255, 0.6),
      rgba(255, 255, 255, 0.5) 30%,
      rgba(255, 255, 255, 0.35) 60%,
      rgba(255, 255, 255, 0) 100%
    );
  }
  .white-center-gradient {
    background-image: linear-gradient(rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4));
  }
  .black-right-gradient {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3) 30%, rgba(0, 0, 0, 0.4) 100%);
  }
  .black-left-gradient {
    background-image: linear-gradient(to left, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3) 30%, rgba(0, 0, 0, 0.4) 100%);
  }
  .black-center-gradient {
    background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4));
  }
  .black-to-top-gradient {
    background-image: linear-gradient(
      to top,
      rgba(0, 0, 0, 0.7),
      rgba(0, 0, 0, 0.6) 20%,
      rgba(0, 0, 0, 0.45) 32%,
      rgba(0, 0, 0, 0.1) 60%,
      rgba(0, 0, 0, 0) 100%
    );
  }
  .black-to-top-tall-gradient {
    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.3) 40%, rgba(0, 0, 0, 0) 100%),
      linear-gradient(26deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.45) 35%, rgba(0, 0, 0, 0) 100%);
  }
  .box-shadow-crisp {
    box-shadow: 0.3px 0.5px 0.7px hsl(var(--tw-shadow-color) / 0.34),
      0.4px 0.8px 1px -1.2px hsl(var(--tw-shadow-color) / 0.34), 1px 2px 2.5px -2.5px hsl(var(--tw-shadow-color) / 0.34);
  }
  .box-shadow-crisp-interact {
    box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.08) 0px 3px 4px 0px;
  }

  @supports (scrollbar-color: auto) {
    .scrolltrack-transparent {
      scrollbar-color: rgba(0, 0, 0, 0);
    }
  }
  @supports selector(::-webkit-scrollbar) {
    .transparent-scrollbar::-webkit-scrollbar {
      @apply bg-transparent h-2 my-2;
    }
    .transparent-scrollbar::-webkit-scrollbar-track {
      @apply my-[2px];
    }
    .transparent-scrollbar::-webkit-scrollbar-thumb {
      @apply bg-grey-40 hover:bg-grey-70 dark:bg-white-100 dark:hover:bg-white-100/70 rounded-lg;
    }
    /* Hide scrollbar for Chrome, Safari and Opera */
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  @supports selector(::backdrop) {
    .bd-blurred::backdrop {
      transition: background-color 0s linear var(--modal-transition-duration),
        backdrop-filter calc(var(--modal-transition-duration) * 2 / 3) var(--modal-transition-easing)
          calc(var(--modal-transition-duration) / 3),
        display 0.7s allow-discrete, overlay 0.7s allow-discrete;
    }
    .bd-blurred[open]::backdrop {
      @apply backdrop-blur-md bg-north-sea-90/50;
    }

    /*   Before-open state  */
    @starting-style {
      .bd-blurred[open]::backdrop {
        @apply backdrop-blur-none bg-transparent;
      }
    }
  }
}
